// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/yusrilsabir22/orderfaz/docs-svc/models"
)

// Mixin1OKCode is the HTTP code returned for type Mixin1OK
const Mixin1OKCode int = 200

/*
Mixin1OK OK

swagger:response mixin1OK
*/
type Mixin1OK struct {

	/*
	  In: Body
	*/
	Payload *models.PbValidateResponse `json:"body,omitempty"`
}

// NewMixin1OK creates Mixin1OK with default headers values
func NewMixin1OK() *Mixin1OK {

	return &Mixin1OK{}
}

// WithPayload adds the payload to the mixin1 o k response
func (o *Mixin1OK) WithPayload(payload *models.PbValidateResponse) *Mixin1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mixin1 o k response
func (o *Mixin1OK) SetPayload(payload *models.PbValidateResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *Mixin1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Mixin1UnauthorizedCode is the HTTP code returned for type Mixin1Unauthorized
const Mixin1UnauthorizedCode int = 401

/*
Mixin1Unauthorized Unauthorized

swagger:response mixin1Unauthorized
*/
type Mixin1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.PbValidateResponse `json:"body,omitempty"`
}

// NewMixin1Unauthorized creates Mixin1Unauthorized with default headers values
func NewMixin1Unauthorized() *Mixin1Unauthorized {

	return &Mixin1Unauthorized{}
}

// WithPayload adds the payload to the mixin1 unauthorized response
func (o *Mixin1Unauthorized) WithPayload(payload *models.PbValidateResponse) *Mixin1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mixin1 unauthorized response
func (o *Mixin1Unauthorized) SetPayload(payload *models.PbValidateResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *Mixin1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
